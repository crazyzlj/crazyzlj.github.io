[{"authors":null,"categories":null,"content":"","date":1538236800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"7ef65b48aad26f09b7de381397cd2a45","permalink":"http://zhulj.net/project/2011-msc-thesis/","publishdate":"2018-09-30T00:00:00+08:00","relpermalink":"/project/2011-msc-thesis/","section":"project","summary":"","tags":["Experiments"],"title":"MSc Thesis","type":"project"},{"authors":null,"categories":null,"content":"","date":1538236800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"c23276a45771ae58f7810de9abb11c11","permalink":"http://zhulj.net/project/2014-phd-dissertation/","publishdate":"2018-09-30T00:00:00+08:00","relpermalink":"/project/2014-phd-dissertation/","section":"project","summary":"","tags":["Watershed modeling and scenario analysis","GeoComputation"],"title":"PhD dissertation","type":"project"},{"authors":["Cheng-Zhi Qin","Hui-Ran Gao","\u003cb\u003e\u003cI\u003eLiang-Jun Zhu*\u003c/I\u003e\u003c/b\u003e","A-Xing Zhu","Jun-Zhi Liu","Hui Wu"],"categories":null,"content":"","date":1535731200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"dec81edc9b67a47aa4f67ce5ac665ca5","permalink":"http://zhulj.net/publication/2018-jswc-bmpsoptslppos/","publishdate":"2018-09-01T00:00:00+08:00","relpermalink":"/publication/2018-jswc-bmpsoptslppos/","section":"publication","summary":"Spatial optimization of best management practices (BMPs) is an effective way to select and allocate BMPs for watershed management such as soil and water conservation and nonpoint source pollution reduction. The commonly used spatial units for BMP configuration (or BMP configuration units) include subbasins, hydrologic response units (HRUs), farms, and fields. Normally, these spatial units are not homogeneous functional units from the perspective of physical geography at the hillslope scale (in terms of geomorphic and hydrologic conditions of the hillslope, for example), and thus cannot effectively represent the spatial relationships between BMPs and spatial locations with respect to hillslope processes from upstream to downstream. This makes it difficult to efficiently and rationally construct spatial optimizations for watershed BMPs. This paper proposes a spatial BMP optimization approach based on slope position units, which are homogeneous spatial units with physical geographic features. In the proposed approach, slope position units are used as BMP configuration units by which the relationships between BMPs and slope positions along a hillslope can be explicitly considered during BMP scenario initialization and optimization via genetic algorithm (i.e., NSGA-II). A distributed and physically based watershed model was used to evaluate the environmental effectiveness (i.e., the reduction rate of soil erosion), and a simple estimation method was developed to calculate the net cost of BMP scenarios. A case study was conducted in a small hilly watershed in the typical red-soil region of the Fujian Province in southeastern China, which suffers severely from soil erosion. A simple system of three types of slope positions (i.e., ridge, backslope, and valley) was used to delineate BMP configuration units. Four BMPs that are used in actual Chinese red-soil regions (closing measures, arbor-bush-herb mixed plantation, low-quality forest improvement, and orchard improvement) were considered in the proposed approach to achieve the multiple optimization objectives, which included maximizing the reduction ratio of soil erosion and minimizing the net cost of the BMP scenario. The proposed approach was compared with the standard random optimization approach, which selects and allocates BMPs randomly on BMP configuration units. The results show that the proposed approach is more effective and efficient for proposing practical and effective BMP scenarios than the random approach.","tags":["Slope position","BMPs","Spatial optimization"],"title":"Spatial optimization of watershed best management practices based on slope position units","type":"publication"},{"authors":["\u003cb\u003e\u003cI\u003eLiang-Jun Zhu\u003c/I\u003e\u003c/b\u003e","A-Xing Zhu","Cheng-Zhi Qin*","Jun-Zhi Liu"],"categories":null,"content":"","date":1519833600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"645bb5e7718ff87923ed6c09d77f8ac4","permalink":"http://zhulj.net/publication/2018-geomorp-autofuzslppos/","publishdate":"2018-03-01T00:00:00+08:00","relpermalink":"/publication/2018-geomorp-autofuzslppos/","section":"publication","summary":"Fuzzy characterization of slope positions is important for geographic modeling. Most of the existing fuzzy classification-based methods for fuzzy characterization require extensive user intervention in data preparation and parameter setting, which is tedious and time-consuming. This paper presents an automatic approach to overcoming these limitations in the prototype-based inference method for deriving fuzzy membership value (or similarity) to slope positions. The key contribution is a procedure for finding the typical locations and setting the fuzzy inference parameters for each slope position type. Instead of being determined totally by users in the prototype-based inference method, in the proposed approach the typical locations and fuzzy inference parameters for each slope position type are automatically determined by a rule set based on prior domain knowledge and the frequency distributions of topographic attributes. Furthermore, the preparation of topographic attributes (e.g., slope gradient, curvature, and relative position index) is automated, so the proposed automatic approach has only one necessary input, i.e., the gridded digital elevation model of the study area. All compute-intensive algorithms in the proposed approach were speeded up by parallel computing. Two study cases were provided to demonstrate that this approach can properly, conveniently and quickly derive the fuzzy slope positions.","tags":["Slope position","Fuzzy membership","Automation","Parallel computing"],"title":"Automatic approach for deriving fuzzy slope positions","type":"publication"},{"authors":["Lunjiang Wang","Guang-hui Zhang","\u003cb\u003e\u003cI\u003eLiang-Jun Zhu\u003c/I\u003e\u003c/b\u003e","Hao Wang"],"categories":null,"content":"","date":1510675200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"abbcf8f4853bd2fe533be405e392a75b","permalink":"http://zhulj.net/publication/2017-geoderma-laserscannerappl/","publishdate":"2017-11-15T00:00:00+08:00","relpermalink":"/publication/2017-geoderma-laserscannerappl/","section":"publication","summary":"Roughness significantly affects the hydrological and erosion processes in arid and semi-arid areas where biological soil crusts (biocrusts) are ubiquitous. Biocrusts influence roughness by the presence of the organisms and their swelling due to the wetting effect. However, the potential effects of biocrust coverage and wetting patterns on swelling induced roughness are elusive. This study aimed to determine the effects of biocrust type, coverage, and wetting patterns on wetting induced roughness (WIR) and to quantify the change process of WIR after wetting. Samples of cyanobacteria and moss with coverages categorized in five different classes were collected. High-resolution laser system samples were used to obtain measurements. The results showed that the mean swelling heights of cyanobacteria and moss were 0.068 mm and 0.415 mm, respectively, after 10 min of 2 mm water spraying. The swelling height of moss increased linearly (R2 = 0.58, P \u0026lt; 0.001) with coverage. A mean negative WIR (âˆ’ 0.005 mm) was found for cyanobacteria, whereas it was 0.079 mm for moss. The WIR of moss was related to coverage (R2 = 0.16, P = 0.003), and a critical coverage of moss existed between 20% and 40%, above which WIR increased sharply. The WIR of moss decreased as a power function of time after wetting (R2 = 0.83). However, neither wetting-drying cycles nor drying durations influenced WIR for both cyanobacteria and moss crusts. The modifications of biocrust to soil surface are small. However, their potential influences on hydrology and erosion may help organisms in arid and semi-arid ecosystems make full use of the limited water, thus adapting to gradually changing environments.","tags":["Experiments"],"title":"Biocrust wetting induced change in soil surface roughness as influenced by biocrust type, coverage and wetting patterns","type":"publication"},{"authors":null,"categories":null,"content":" 1 Requirement analysis ArcSWAT and QSWAT is the most two popular user interface for SWAT model users. SWAT-CUP has been widespreadly used to calibrate SWAT model which coupled SUFI2, PSO, GLUE, ParaSol, and MCMC procedures.\nMost users like to work with user-friendly interfaces (i.e., ArcSWAT and QSWAT, with SWATEditor inside) other than original SWAT input and output files (i.e., the TxtInOut folder). Because the latter has a large number of files and is not easy to handle.\nSo, when the calibration is done by SWAT-CUP, users have a desire to write the calibrated parameters back to SWAT database (i.e., \u0026lt;project name\u0026gt;.mdb), such as subjects in Google group, Copy Calibrated parameters back to Arc SWAT model? and Write back the parameters in arc swat?\nUsually, we have two methods to accomplish this requirement.\n1.1 Manual calibration in SWATEditor After the basis SWAT model is built, users may manual calibrate their model by modifying parameters using Manual Calibration Helper in SWATEditor (such as Fig.1 and Fig.2).\nFig.1 Manual calibration Helper in SWATEditor\nFig.2 Parameter selection and modification GUI in SWATEditor\nBesides the easy to learn and convenient, however, there are some drawbacks of this method:\n parameters are selected and may not sufficient for your model, e.g., OV_N.hru is not listed. parameters of specific soil layer is not capable to modified, e.g., Sol_K means Sol_K of all soil layers will be updated. the modified value may excess the absolutely value range which is defined in Absolute_SWAT_Values.txt. This is the probably reason that why the output of SWAT-CUP is different from the ArcSWAT or QSWAT after manually update the calibrated parameters. manually operation is tedious and error-prone.  1.2 Manually update the Access database In order to overcome some of the drawbacks in the former method, users can use some simple SQL sentences to update the SWAT database manually.\nThe usual steps is as follows:\n Open \u0026lt;project name\u0026gt;.mdb with Access Built a new query layout (see Fig.3 in details) (the Access used is Chinese version, please find the corresponding buttons in your computer) Type the SQL sentences and press run to update the table (see Fig.4).  Fig.3 Build a new query layout in Access\nFig.4 Tyep SQL sentences and run update\nObviously, some advantage can be highlighted, such as:\n all parameters in SWAT can be customized. complex conditions can be implemented by using where keyword. a series of sentences can be run at a time for a single table, such as hru, sol, etc.  By contrast, some drawbacks are also exposed:\n users should be familiar with the basic SQL grammar. this method is more error-prone and all operation should be careful!  1.3 Can it be automated? After reviewing the common used methods above, the essential tips used to write the calibrated parameters back to SWAT database can be drawn as follows:\n the calibrated parameters is concluded in a single file named model.in each item in model.in has the same scheme, x__\u0026lt;parname\u0026gt;.\u0026lt;ext\u0026gt;__\u0026lt;hydrogrp\u0026gt;__\u0026lt;soltext\u0026gt;__\u0026lt;landuse\u0026gt;__\u0026lt;subbsn\u0026gt;__\u0026lt;slope\u0026gt; and can be convert as SQL update sentence each parameter has a absolutely value range that defined in Absolute_SWAT_Values.txt  Therefore, if we,\n read model.in and analysis each calibrated parameter item construct the corresponding SQL update sentence connect to Access database and run these SQL sentences  it will be automated!\n2 Implementation 2.1 Overview This automatic program is written in python and requires pyodbc package.\n2.2 Functions 2.2.1 paraIdentifier class Followed the \u0026ldquo;Parameterization in SWAT-CUP\u0026rdquo; in SWAT-CUP manual.pdf, I designed a class to manage the calibrated parameter scheme.\nBE CAUTION: Currently, only fundamental function is implemented, Specification of Management Parameters, Specification of Crop Parameters, Specification of Pesticide Parameters, and Specification of Precipitation and Temperature Parameters are not considered!\nIf your SWAT model need to update fert.dat, pest.dat, plant.dat, septwq.dat, til.dat, and urban.dat, it is highly recommended that copy these modified files in SWAT-CUP to your TxtInOut folder directly!\nclass paraIdentifier: ### the parameter identifier format proposed by SWAT-CUP ### x__\u0026lt;parname\u0026gt;.\u0026lt;ext\u0026gt;__\u0026lt;hydrogrp\u0026gt;__\u0026lt;soltext\u0026gt;__\u0026lt;landuse\u0026gt;__\u0026lt;subbsn\u0026gt;__\u0026lt;slope\u0026gt; def __init__(self): self.name = '' ### SWAT parameter name as it appears in the Absolute_SWAT_Values.txt self.ext = '' ### SWAT file extention code or table name in SWAT database, e.g., sol, hru, rte, etc. self.hydrogrp = [] ### (Optional) soil hydrological group ('A', 'B', 'C', or 'D') self.soltext = [] ### (Optional) soil texture self.landuse = [] ### (Optional) landuse self.subbsn = [] ### (Optional) subbasin number(s) self.slope = [] ### (Optional) slope, e.g., '0-20' self.indent = '' ### identifier code, v means replaced, a means added, r means multiplied. self.value = 9999 ### self.lyr = [] ### (Optional) soil layer number(s), e.g., 1,2,4-6 means 1,2,4,5,6  2.2.2 Workflow functions Corresponding to the essential tips in section 1.3, I designed four function:\n ReadModelIn() -\u0026gt; read model.in ReadAbsoluteVal() -\u0026gt; read Absolute_SWAT_Values.txt ConstructSQLs() -\u0026gt; Construct SQL update sentences UpdateSWATDatabase() -\u0026gt; Run SQLs  2.3 Download and Execution The script can be forked and downloaded at Github-crazyzlj-python.\nTo run the script, you should have:\n python 2.X (x86 version) pyodbc (whl)  Usage:\n Get model.in from SWAT-CUP or manually create it. Here is an example:  // .bsn v__SPCON.bsn\t0.003 // .chm v__SOL_NO3(1).chm\t27 // .gw v__ALPHA_BF.gw\t0.95 // .hru r__OV_N.hru\t-0.40 r__SLSUBBSN.hru__________40.0-9999\t0.60 // .mgt1 r__BIOMIX.mgt\t-0.13 // .pnd r__PND_VOL.pnd\t-0.15 // .rte v__CH_ERODMO().rte\t0.1 // .sol r__SOL_K(1).sol\t0.95 // .swq r__RS4.swq\t0.08 // .wwq r__AI1.wwq\t0.06   put Update_SWAT_mdb_from_SWAT_CUP.py, Absolute_SWAT_Values.txt, and model.in into the folder of SWAT, i.e., the same folder with \u0026lt;project name\u0026gt;.mdb (such as Fig. 5)  Fig.5 Files list\n open Update_SWAT_mdb_from_SWAT_CUP.py and assign your project name to SWAT_PROJ_NAME in line 277, such as  SWAT_PROJ_NAME = 'zts2'   Run the python script. Fig.6 is the example output of one updated parameters. There are three SQLs to finish the update, one for relative or replace change, and the other two for absolutely range examination.   Fig.6 Example output of one updated parameter\n3 Conclusion Currently, I just accomplished the basic function of writing calibrated parameters from SWAT-CUP back to SWAT database. Obviously, this first beta version is incomplete and imperfect.\nAny advises or bugs will be greatly welcome!\n","date":1459036800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"1d3eda32a6a026deec2ae5233aa89c60","permalink":"http://zhulj.net/post/2016-03-27-update-swat-database-from-swatcup/","publishdate":"2016-03-27T00:00:00Z","relpermalink":"/post/2016-03-27-update-swat-database-from-swatcup/","section":"post","summary":"When the calibration is done by SWAT-CUP, users have a desire to write the calibrated parameters back to SWAT database (i.e., `.mdb`), such as subjects in Google group, [Copy Calibrated parameters back to Arc SWAT model?](https://groups.google.com/forum/#!topic/swat-cup/ouqJUPbeqUw \"subject-1\") and [Write back the parameters in arc swat?](https://groups.google.com/forum/#!topic/swat-cup/SRyTyrM6C0A \"subject-2\"). How should we do? ","tags":["SWAT","SWAT-CUP","Python"],"title":"Automatically write Calibrated parameters by SWAT-CUP (model.in) back to SWAT Access database (.mdb)","type":"post"},{"authors":["Zongping Ren*","\u003cb\u003e\u003cI\u003eLiang-Jun Zhu\u003c/I\u003e\u003c/b\u003e","Bing Wang","Shengdong Cheng"],"categories":null,"content":"","date":1457971200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538317066,"objectID":"196975795562eaec422cd342b9f7d945","permalink":"http://zhulj.net/publication/2016-jaridland-restorationeffectconductivity/","publishdate":"2016-03-15T00:00:00+08:00","relpermalink":"/publication/2016-jaridland-restorationeffectconductivity/","section":"publication","summary":"The Loess Plateau of China has experienced extensive vegetation restoration in the past several decades, which leads to great changes in soil properties such as soil bulk, porosity, and organic matter with the vegetation restoration age. And these soil properties have great effect on the soil infiltration and soil hydraulic conductivity. However, the potential changes in soil hydraulic conductivity caused by vegetation restoration age have not been well understood. This study was conducted to investigate the changes in soil hydraulic conductivity under five grasslands with different vegetation restoration ages (3, 10, 18, 28 and 37 years) compared to a slope farmland, and further to identify the factors responsible for these changes on the Loess Plateau of China. At each site, accumulative infiltration amount and soil hydraulic conductivity were determined using a disc permeameter with a water supply pressure of â€“20 mm. Soil properties were measured for analyzing their potential factors influencing soil hydraulic conductivity. The results showed that the soil bulk had no significant changes over the initial 20 years of restoration (P0.05); the total porosity, capillary porosity and field capacity decreased significantly in the grass land with 28 and 37 restoration ages compared to the slope farmland; accumulative infiltration amount and soil hydraulic conductivity were significantly enhanced after 18 years of vegetation restoration. However, accumulative infiltration amount and soil hydraulic conductivity fluctuated over the initial 10 years of restoration. The increase in soil hydraulic conductivity with vegetation restoration was closely related to the changes in soil texture and structure. Soil sand and clay contents were the most influential factors on soil hydraulic conductivity, followed by bulk density, soil porosity, root density and crust thickness. The Pearson correlation coefficients indicated that the soil hydraulic conductivity was affected by multiply factors. These results are helpful to understand the changes in hydrological and erosion processes response to vegetation succession on the Loess Plateau.","tags":["Experiments"],"title":"Soil hydraulic conductivity as affected by vegetation restoration age on the Loess Plateau, China","type":"publication"}]