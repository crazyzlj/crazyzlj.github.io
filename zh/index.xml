<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>朱良君 on 朱良君</title>
    <link>http://zhulj.net/zh/</link>
    <description>Recent content in 朱良君 on 朱良君</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&amp;copy; 2018 Liang-Jun Zhu</copyright>
    <lastBuildDate>Sun, 30 Sep 2018 00:00:00 +0800</lastBuildDate>
    <atom:link href="/zh/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>博士论文</title>
      <link>http://zhulj.net/zh/project/2014-phd-dissertation/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/project/2014-phd-dissertation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>硕士论文</title>
      <link>http://zhulj.net/zh/project/2011-msc-thesis/</link>
      <pubDate>Sun, 30 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/project/2011-msc-thesis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Spatial optimization of watershed best management practices based on slope position units(基于坡位单元的流域最佳管理措施空间优化)</title>
      <link>http://zhulj.net/zh/publication/2018-jswc-bmpsoptslppos/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2018-jswc-bmpsoptslppos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>以坡位为空间配置单元的流域管理措施情景优化方法</title>
      <link>http://zhulj.net/zh/publication/2018-dqxxkxxb-bmpsoptslppos/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2018-dqxxkxxb-bmpsoptslppos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automatic approach to deriving fuzzy slope positions(模糊坡位提取自动化方法)</title>
      <link>http://zhulj.net/zh/publication/2018-geomorp-autofuzslppos/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2018-geomorp-autofuzslppos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>德淘Gen8打造家庭NAS</title>
      <link>http://zhulj.net/zh/post/2017-2-14-gen8_nas/</link>
      <pubDate>Tue, 14 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://zhulj.net/zh/post/2017-2-14-gen8_nas/</guid>
      <description>

&lt;h2 id=&#34;0-基本需求&#34;&gt;0.基本需求&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;照片、视频集中存放，手机、iPad、Windows、macOS可以访问、播放&lt;/li&gt;
&lt;li&gt;iPhone手机照片增量备份&lt;/li&gt;
&lt;li&gt;macOS使用TimeMachine备份&lt;/li&gt;
&lt;li&gt;出门在外，外网下访问NAS中存放的文件&lt;/li&gt;
&lt;li&gt;迅雷远程下载&lt;/li&gt;
&lt;li&gt;支持多用户权限&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1-硬件配置&#34;&gt;1.硬件配置&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.computeruniverse.net/en/products/90620980/hp-proliant-microserver-gen8-819185-421.asp&#34; target=&#34;_blank&#34;&gt;HP Gen8一台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://detail.tmall.com/item.htm?id=532744221343&amp;amp;spm=a1z09.2.0.0.v1OgG4&amp;amp;_u=ejl3ph51c0&#34; target=&#34;_blank&#34;&gt;&lt;del&gt;Netac/朗科 N3-120GB 固态硬盘&lt;/del&gt;&lt;/a&gt; （使用不超过一年就掉盘2次，最后彻底无法识别，不建议购买），用于放在sata5光驱位，装系统&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://detail.tmall.com/item.htm?id=45320181163&amp;amp;spm=a1z09.2.0.0.v1OgG4&amp;amp;_u=ejl3phfa2a&#34; target=&#34;_blank&#34;&gt;小pin转sata电源线&lt;/a&gt; （怀疑劣质线间歇性断电，不够稳定，目前将固态硬盘置于SATA1口作为系统盘，使用了HP 654540-001 2.5寸转3.5寸硬盘支架），用于固态硬盘连接&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://item.jd.com/983540.html#none&#34; target=&#34;_blank&#34;&gt;西数红盘4T&lt;/a&gt;，作为数据盘放在4个硬盘笼中（等以后需要扩容了，直接插上数据盘就能继续工作啦，家用没必要组RAID，因为RAID没办法硬盘休眠）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-软件架构&#34;&gt;2.软件架构&lt;/h2&gt;

&lt;p&gt;Gen8有很多实用的玩法，但是我希望在不更新硬件（CPU、内存、网络）的基础上进行家用，因此选用了较为稳妥的Windows Server 2012 R2 + Hyper-V（黑群晖）的方案。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;黑群晖通过系统自带NFS服务挂载数据盘中的文件夹，和Server 2012 R2实现文件共享，通过群晖App套件（DS Photo，DS Vedio，DS File等）供手机和iPad访问&lt;/li&gt;
&lt;li&gt;Server 2012 R2本身也建立文件服务器，以便Windows和Mac直接访问，而不用经过群晖这一层&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-配置步骤&#34;&gt;3.配置步骤&lt;/h2&gt;

&lt;p&gt;经过几次失败的配置，将我安装过程总结如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3.1.将固态硬盘固定在光驱位（如果不需要用U盘引导启动，则直接放在SATA1位置即可），将Server 2012 R2镜像（.iso）文件放入U盘；&lt;/li&gt;
&lt;li&gt;3.2.插入U盘，硬盘笼里不要放硬盘，通电，通过路由器或Fing手机软件找到iLO的IP地址，通过IE浏览器访问iLO，并打开远程操作台，通过网页端PowerOn服务器；&lt;/li&gt;
&lt;li&gt;3.3.机器经过一阵轰鸣之后进入自检界面，出现F9、F10、F11按键提示的时候，按F10进入Intelligent Provisioning，选择U盘里的镜像进行自动系统安装，IP会自动将HP相关驱动一并装好；&lt;/li&gt;
&lt;li&gt;3.4.进入系统之后，什么都不做，第一件事就是把该加装的服务都装上，否则后面装上硬盘、虚拟机之后再添加会出现安装失败的现象。这里我需要把Hyper-V、NFS服务、功能里的Windows Server Backup（用于配置完成之后一次性备份整个Windows Server 2012r2到其他硬盘，以便系统盘挂掉之后恢复）勾选，如果需要链路聚合，推荐使用iLO界面登录的情况下，创建Windows自带的NIC组合；&lt;/li&gt;
&lt;li&gt;3.5.在做U盘引导启动和插入硬盘之前，先装上黑群晖，具体参照&lt;a href=&#34;http://bbs.ngacn.cc/read.php?tid=7929253&#34; target=&#34;_blank&#34;&gt;教程1&lt;/a&gt;、&lt;a href=&#34;http://www.nasyun.com/thread-25075-1-3.html&#34; target=&#34;_blank&#34;&gt;教程2&lt;/a&gt;、&lt;a href=&#34;http://post.smzdm.com/p/444521/&#34; target=&#34;_blank&#34;&gt;教程3&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;3.6.敲代码方式制作U盘引导启动，参考&lt;a href=&#34;https://www.chiphell.com/forum.php?mod=viewthread&amp;amp;tid=1196090&amp;amp;page=1#pid26837939&#34; target=&#34;_blank&#34;&gt;这篇教程&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;3.7.此时可以装上硬盘和U盘，重启机器；&lt;/li&gt;
&lt;li&gt;3.8a.[不推荐]利用hanewin软件挂载文件夹给黑群晖，参考&lt;a href=&#34;http://post.smzdm.com/p/444521/&#34; target=&#34;_blank&#34;&gt;教程&lt;/a&gt;，设置群晖开机自动挂载NFS文件夹，参考&lt;a href=&#34;http://blog.bbzhh.com/index.php/archives/110.html&#34; target=&#34;_blank&#34;&gt;教程1&lt;/a&gt;和&lt;a href=&#34;https://www.chiphell.com/thread-1240623-1-1.html&#34; target=&#34;_blank&#34;&gt;教程2&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;3.8b.[推荐]使用Windows原生的NFS挂载了黑群晖，&lt;a href=&#34;https://www.chiphell.com/thread-1605301-1-1.html&#34; target=&#34;_blank&#34;&gt;见这里&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;3.9.配置Server 2012 R2文件简单共享，当然也可以直接利用黑裙的共享文件夹;&lt;/li&gt;
&lt;li&gt;3.10.使用Syncthing同步其他设备，在群晖套件中心添加&lt;a href=&#34;http://packages.synocommunity.com/&#34; target=&#34;_blank&#34;&gt;http://packages.synocommunity.com/&lt;/a&gt; 源即可找到并安装Syncthing；&lt;/li&gt;
&lt;li&gt;3.11.黑群晖中利用Docker安装xware实现迅雷远程下载；&lt;/li&gt;
&lt;li&gt;3.12.利用花生壳实现内网穿透，便于外网访问黑群晖；&lt;/li&gt;
&lt;li&gt;。。。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>跨平台(PC、Mac、iPhone)文献管理攻略</title>
      <link>http://zhulj.net/zh/post/2016-12-30-cross-platform-bibliography/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://zhulj.net/zh/post/2016-12-30-cross-platform-bibliography/</guid>
      <description>

&lt;h2 id=&#34;1-软件&#34;&gt;1.软件&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Zotero

&lt;ul&gt;
&lt;li&gt;Zotfile&lt;/li&gt;
&lt;li&gt;Better Bib(La)TeX&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;坚果云&lt;/li&gt;
&lt;li&gt;手机端

&lt;ul&gt;
&lt;li&gt;Papership (iOS)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;插件

&lt;ul&gt;
&lt;li&gt;Zotero Connector (Chrome 插件)&lt;/li&gt;
&lt;li&gt;Word processors add-in&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-zotero配合坚果云进行文献同步&#34;&gt;2.Zotero配合坚果云进行文献同步&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Zotero&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preference-Advanced-Files and Folders, Base directory填写坚果云同步目录，Data directory location填写Zotero的文件目录（即为Zotero自己的同步目录，免费用户只有300M空间）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Better BibTex&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Citation keys: &lt;code&gt;[auth:lower]_[journal][&amp;gt;0]_[year]|[auth:lower]_[Title:select,1,1]_[year]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Zotfile&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;General settings, 上面填写Zotero自己的数据目录，下面填写坚果云同步目录，最后一级均为&lt;code&gt;storage&lt;/code&gt;，如&lt;code&gt;C:\z_reading\zotero\papers\storage&lt;/code&gt;和&lt;code&gt;D:\mysync\storage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use subfolder defined by: &lt;code&gt;\%w|%T|%I|%t\%y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Renaming rules: &lt;code&gt;%a_ %y_ %t&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Papership&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Papership配合坚果云的WebDav服务可以很方便的实现和电脑版一样的体验：浏览文件夹、查看Notes、打开PDF、标注（需app内购）。但是使用WebDav服务有一个对我来讲无法忍受的缺点，同步的文献会被压缩成zip文件传至坚果云，且文件名为无序字符，虽然可以通过PaperShip方便查看，但是并不方便日常查询。&lt;/p&gt;

&lt;p&gt;因此，我放弃了这种同步方案，依然采用的是坚果云同步storage文件夹，Zotfile对文献重命名并链接的方案。&lt;/p&gt;

&lt;h2 id=&#34;3-优缺点&#34;&gt;3.优缺点&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;优点

&lt;ul&gt;
&lt;li&gt;多个平台之间文献和PDF文件的同步更新&lt;/li&gt;
&lt;li&gt;Zotero提供的全文搜索、全文下载等便利功能&lt;/li&gt;
&lt;li&gt;可以导出多个Bib(La)TeX格式的引文库，并实时更新&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;缺点

&lt;ul&gt;
&lt;li&gt;Papership不能直接打开PDF，只能是结合Papership保留的Zotero文件夹结构及Tags和Note+坚果云上完整的规范命名后的PDF文件&lt;/li&gt;
&lt;li&gt;使用Zotfile对文献进行重命名后，Zotero对PDF文件是文件链接的方式，因此，删除文献后，PDF文档并不会删除，需得同时手动删除&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-文献管理经验&#34;&gt;4.文献管理经验&lt;/h2&gt;

&lt;h2 id=&#34;4-1-文献搜集整理&#34;&gt;4.1.文献搜集整理&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;文献通过Zotero Connector插件自动添加，可归于多个分类，如研究内容、文章等&lt;/li&gt;
&lt;li&gt;添加原文并由Zotfile重命名后存入storage文件夹，由坚果云同步&lt;/li&gt;
&lt;li&gt;添加多个Tags方便查找：

&lt;ul&gt;
&lt;li&gt;文章类型 [原理、方法、应用]&lt;/li&gt;
&lt;li&gt;阅读状态 [DONE、TODO、DOING]&lt;/li&gt;
&lt;li&gt;借鉴意义 [重要、参考]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;添加一条Notes，可通过PaperShip同步编辑，包括但不仅限于以下内容：

&lt;ul&gt;
&lt;li&gt;文章亮点&lt;/li&gt;
&lt;li&gt;研究区简介&lt;/li&gt;
&lt;li&gt;方法步骤&lt;/li&gt;
&lt;li&gt;共享数据&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;设置相关文献 (Related)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-2-文档中插入文献&#34;&gt;4.2.文档中插入文献&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Better BibTeX插件的自动导出功能可以方便地更新文献库，直接用于LaTeX&lt;/li&gt;
&lt;li&gt;通过Zotero的Word插件插入文献，不会受其他人修改的影响&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-一些改进&#34;&gt;5.一些改进&lt;/h2&gt;

&lt;h3 id=&#34;5-1-python代码整理storage文件夹&#34;&gt;5.1.Python代码整理storage文件夹&lt;/h3&gt;

&lt;p&gt;为了方便清理Zotero产生的空白文件夹，以便通过坚果云查找文件，我写了一个简单的Python脚本来删除这些文件夹：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
from shutil import rmtree
suffix = [&#39;.pdf&#39;, &#39;.doc&#39;, &#39;.docx&#39;, &#39;.xls&#39;, &#39;.xlsx&#39;, &#39;.ppt&#39;, &#39;.pptx&#39;, &#39;.tex&#39;, &#39;.txt&#39;]
deldirs = []
for root, dirs, files in os.walk(r&amp;quot;D:\mysync\storage&amp;quot;):
    for i in files:
        for suf in suffix:
            if i.find(suf) &amp;lt; 0:
                continue
            else:
                break
        else:  # Can not find any useful documents.
             deldirs.append(root)
deldirs = list(set(deldirs))
for deldir in deldirs:
    print &amp;quot;deleting %s...&amp;quot; % deldir
    rmtree(deldir)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;修改第4行storage路径为你自己的路径&lt;/li&gt;
&lt;li&gt;保存文件为&lt;code&gt;*.py&lt;/code&gt;，双击即可运行（前提是电脑上正确配置过python）&lt;/li&gt;
&lt;li&gt;添加计划任务，每天定期执行该脚本&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SWAT模型非点源污染模拟对空间单元划分的响应</title>
      <link>http://zhulj.net/zh/publication/2016-synydxxb-swathrudelieffects/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2016-synydxxb-swathrudelieffects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>如何利用Github Pages, Doxygen和Travis CI构建自动更新文档系统</title>
      <link>http://zhulj.net/zh/post/2016-04-12-automatic-documentation-publishing-with-github-and-travisci/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://zhulj.net/zh/post/2016-04-12-automatic-documentation-publishing-with-github-and-travisci/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;参考资料：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.&lt;a href=&#34;https://help.github.com/articles/creating-project-pages-manually/&#34; target=&#34;_blank&#34;&gt;Creating Project Pages manually by Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2.&lt;a href=&#34;http://blog.gockelhut.com/2014/09/automatic-documentation-publishing-with.html&#34; title=&#34;Automatic Documentation Publishing with GitHub and TravisCI&#34; target=&#34;_blank&#34;&gt;Automatic Documentation Publishing with GitHub and TravisCI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.&lt;a href=&#34;https://djw8605.github.io/2017/02/08/deploying-docs-on-github-with-travisci/&#34; target=&#34;_blank&#34;&gt;Deploying Docs on Github with Travis-CI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;1-手工创建github-pages&#34;&gt;1 手工创建Github Pages&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;# 克隆一个纯净仓库
git clone github.com/user/repository.git
# 创建gh-pages分支
cd repository
git checkout --orphan gh-pages
# 这个gh-pages分支不会影响其他分支，因为它是orphan！
# 删除所有库内文件
git rm -rf .
# 创建一个html并push到gh-pages分支
echo &amp;quot;My Page&amp;quot; &amp;gt; index.html
git add index.html
git commit -a -m &amp;quot;First pages commit&amp;quot;
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，就可以通过&lt;code&gt;http(s)://&amp;lt;username&amp;gt;.github.io/&amp;lt;projectname&amp;gt;&lt;/code&gt;访问项目主页了，比如&lt;a href=&#34;https://lreis2415.github.io/SEIMS/&#34; target=&#34;_blank&#34;&gt;https://lreis2415.github.io/SEIMS/&lt;/a&gt;，注意，repository大小写敏感！&lt;/p&gt;

&lt;h1 id=&#34;2-在travis-ci中添加库&#34;&gt;2 在Travis CI中添加库&lt;/h1&gt;

&lt;p&gt;使用Github账号登录&lt;a href=&#34;https://travis-ci.org/&#34; target=&#34;_blank&#34;&gt;Travis CI&lt;/a&gt;，进入“Account”，找到你想创建文档的Github库，启用它。&lt;/p&gt;

&lt;p&gt;这样就让Travis CI知道了，将来这个库每次push的时候，都要根据库根目录下的&lt;code&gt;.travis.yml&lt;/code&gt;配置进行自动构建（文档、程序之类的）。&lt;/p&gt;

&lt;h1 id=&#34;3-为travis-ci创建ssh-key&#34;&gt;3 为Travis CI创建SSH key&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cd repository
mkdir doc
ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot; -f doc/travisci_rsa
# travisci_rsa和travisci_rsa.pub会生成在当前仓库目录doc/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;3.1.将&lt;code&gt;travisci_rsa.pub&lt;/code&gt;中的内容添加至Github库的设置中，即Settings -&amp;gt; Deploy Keys，当然，记得要选中“Allow write access”。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.2.使用Travis CI提供的加密文件的方案，即Travis CI CLI，对&lt;code&gt;travisci_rsa&lt;/code&gt;文件进行加密。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3.2.1.从Ruby Gem安装&lt;code&gt;travis&lt;/code&gt;，Windows下请首先安装&lt;a href=&#34;http://rubyinstaller.org/downloads&#34; target=&#34;_blank&#34;&gt;Ruby&lt;/a&gt;，替换掉官方的sources，参考&lt;a href=&#34;http://zhulj.net/others/2016/03/17/Github-jekyll-blog.html&#34; target=&#34;_blank&#34;&gt;这篇博客&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.2.2.Windows下操作（P.S.在我电脑上反正是出错！&lt;strong&gt;推荐使用linux&lt;/strong&gt;！）：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;gem sources --add http://gems.ruby-china.org/ --remove https://rubygems.org/
gem install travis
travis login
# 然后输入Github的用户名、密码进行验证
# 创建.travis.yml
cd &amp;lt;path/to/your/github/repository&amp;gt;
echo &amp;quot;before_install:&amp;quot; &amp;gt; .travis.yml
# 然后便可以加密文件了
travis encrypt-file doc/travisci_rsa --add
# Output:
# encrypting travisci_rsa for lreis/SEIMS
# storing result as travisci_rsa.enc
# storing secure env variables for decryption
# Make sure to add super_secret.txt.enc to the git repository.
# Make sure not to add super_secret.txt to the git repository.
# Commit all changes to your .travis.yml.
    
# 将travisci_rsa.enc上传至Github，而不要讲travisci_rsa上传，可以将travisci_rsa删掉
rm doc/travisci_rsa
    
# 将以下两行添加至.travis.yml
- chmod 0600 travisci_rsa
- cp doc/travisci_rsa ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;3.2.3.CentOS下操作：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# 安装ruby和gem以安装travis
sudo yum install ruby rubygems
# 但是这样安装之后，设置好中国的ruby源，安装travis依然遇到各种问题，比如SSL，hostname等。
# ERROR:  While executing gem ...
# (Gem::RemoteFetcher::FetchError)
#    hostname was not match with the server certificate (https://gems-10023966.file.myqcloud.com/quick/Marshal.4.8/travis-1.8.2.gemspec.rz)
    
# 因此推荐采用如下Linux服务器RVM安装脚本
# https://github.com/huacnlee/init.d/blob/master/install_rvm
vim install_rvm
# 粘贴脚本内容
chomd 700 install_rvm
# 执行脚本
./install_rvm 
# 剩下的操作与Windows类似
gem install travis
travis login
cd &amp;lt;path/to/your/github/repository&amp;gt;
echo &amp;quot;before_install:&amp;quot; &amp;gt; .travis.yml
travis encrypt-file doc/travisci_rsa --add
rm doc/travisci_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.3.上一步操作中&lt;code&gt;travis encrypt-file doc/travisci_rsa --add&lt;/code&gt;之后，打开Travis CI的库设置页面，发现环境变量里多了2个值，分别为&lt;code&gt;encrypted*_iv&lt;/code&gt;和&lt;code&gt;encrypted*_key&lt;/code&gt;，这是&lt;code&gt;openssl&lt;/code&gt;解密&lt;code&gt;travisci_rsa.enc&lt;/code&gt;需要的参数，需要在&lt;code&gt;.yml&lt;/code&gt;文件中设置。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;4-配置travis-ci&#34;&gt;4 配置Travis CI&lt;/h1&gt;

&lt;p&gt;上一步中，我们已经在库的根目录下创建了&lt;code&gt;.travis.yml&lt;/code&gt;文件，接下来要对其进行进一步编辑。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dist: trusty
branches:
  only:
    - master
before_install:
  - openssl aes-256-cbc -K $encrypted_9c89c5b645f3_key -iv $encrypted_9c89c5b645f3_iv
    -in doc/travisci_rsa.enc -out doc/travisci_rsa -d
  - sudo apt-get install doxygen graphviz
  - chmod 0600 doc/travisci_rsa
  - cp doc/travisci_rsa ~/.ssh/id_rsa
  # push automatically generated doxygen html files to gh-pages branch
  - chmod 700 doc/publish-doxygen
  - &amp;quot;./doc/publish-doxygen&amp;quot;
notifications:
  email:false
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;5-配置doxygen&#34;&gt;5 配置Doxygen&lt;/h1&gt;

&lt;p&gt;上一步中，构建Doxygen文档使用了&lt;code&gt;doc/publish-doxygen&lt;/code&gt;，具体如何配置的呢？&lt;/p&gt;

&lt;p&gt;主要分为以下几步：
+ 5.1.设置Github库地址、Doxygen文档地址等
+ 5.2.克隆一份现有的gh-pages，并清空，以防更新后有旧版本残留
+ 5.3.调用&lt;code&gt;doxygen&lt;/code&gt;生成代码文档
+ 5.4.将&lt;code&gt;html&lt;/code&gt;文件夹push到gh-pages分支&lt;/p&gt;

&lt;p&gt;示例代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash -e

# Settings
REPO_PATH=git@github.com:lreis2415/SEIMS.git
HTML_PATH=doc/html
COMMIT_USER=&amp;quot;YOUR USERNAME&amp;quot;
COMMIT_EMAIL=&amp;quot;YOUR EMAIL&amp;quot;
CHANGESET=$(git rev-parse --verify HEAD)

# Get a clean version of the HTML documentation repo.
rm -rf ${HTML_PATH}
mkdir -p ${HTML_PATH}
git clone -b gh-pages &amp;quot;${REPO_PATH}&amp;quot; --single-branch ${HTML_PATH}

# rm all the files through git to prevent stale files.
cd ${HTML_PATH}
git rm -rf .
cd -

# Generate the HTML documentation.

#make doxygen
doxygen ./doc/Doxyfile
echo &amp;quot;Doxygen generated done!&amp;quot;
# Create and commit the documentation repo.
cd ${HTML_PATH}
git add .
git config user.name &amp;quot;${COMMIT_USER}&amp;quot;
git config user.email &amp;quot;${COMMIT_EMAIL}&amp;quot;
git commit -m &amp;quot;Automated doc for changeset ${CHANGESET}.&amp;quot;
git push origin gh-pages
cd -
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;6-测试&#34;&gt;6 测试&lt;/h1&gt;

&lt;p&gt;push到master分支，等待一会，打开项目主页看看效果吧，如&lt;a href=&#34;https://lreis2415.github.io/SEIMS/&#34; target=&#34;_blank&#34;&gt;https://lreis2415.github.io/SEIMS/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;当然，如果对Doxygen默认的样式不满意，你还有很多种途径进行定制，这里就不介绍啦。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>利用QSWAT进行SWAT建模(QSWAT教程)</title>
      <link>http://zhulj.net/zh/post/2016-04-10-qswat-manual/</link>
      <pubDate>Mon, 11 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://zhulj.net/zh/post/2016-04-10-qswat-manual/</guid>
      <description>

&lt;h1 id=&#34;1-写在前面&#34;&gt;1 写在前面&lt;/h1&gt;

&lt;p&gt;由于ArcGIS的广泛使用，&lt;a href=&#34;http://swat.tamu.edu/software/arcswat/&#34; title=&#34;ArcSWAT&#34; target=&#34;_blank&#34;&gt;ArcSWAT&lt;/a&gt;顺理成章成为SWAT建模者的首选，但相信很多人和我一样，使用ArcSWAT（尤其指适配ArcGIS 10.x版本的）时，经常遇到莫名其妙的COM组件错误（如图1），无从查错，只能一遍遍重来……重来……重来……&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F1-ArcSWAT-common-error.jpg&#34; alt=&#34;Fig1ArcSWAT-common-error&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图1. ArcSWAT常见错误提示，无从下手&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;随着开源GIS软件的蓬勃发展，GRASS、QGIS等优秀软件日臻完善，基于这些软件的第三方插件亦愈加丰富。&lt;a href=&#34;http://swat.tamu.edu/software/qswat/&#34; title=&#34;QSWAT&#34; target=&#34;_blank&#34;&gt;QSWAT&lt;/a&gt;就是这样一款足以替代ArcGIS进行SWAT参数准备及模型构建的用户界面插件。&lt;/p&gt;

&lt;p&gt;本文将从数据准备到软件操作，再到模型运行介绍利用&lt;a href=&#34;http://swat.tamu.edu/software/qswat/&#34; title=&#34;QSWAT&#34; target=&#34;_blank&#34;&gt;QSWAT&lt;/a&gt;进行SWAT建模的过程，希望能够起到SWAT零基础入门的效果。&lt;/p&gt;

&lt;p&gt;P.S.1 写这篇博客时，我也是第一次真正构建、运行、率定SWAT模型，遇到了很多问题，感谢&lt;a href=&#34;https://groups.google.com/forum/#!forum/swatuser&#34; title=&#34;swat-user-group&#34; target=&#34;_blank&#34;&gt;Google SWAT&lt;/a&gt;/&lt;a href=&#34;https://groups.google.com/forum/#!forum/swat-cup&#34; title=&#34;swat-cup-google-group&#34; target=&#34;_blank&#34;&gt;SWAT-CUP Group&lt;/a&gt;以及其他网上博客的帮助。&lt;/p&gt;

&lt;p&gt;P.S.2 官方使用手册永远是最好的资料，在进行QSWAT学习过程中，详细翻阅了多个手册，包括：ArcSWAT2012 User Guide&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref1&#34;&gt;&lt;a href=&#34;#fn:ref1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, SWAT 2012 Input/Output Documentation&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref2&#34;&gt;&lt;a href=&#34;#fn:ref2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, SWAT Theory 2009&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref3&#34;&gt;&lt;a href=&#34;#fn:ref3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, SWAT Editor 2012&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref4&#34;&gt;&lt;a href=&#34;#fn:ref4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, QSWAT manual&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref5&#34;&gt;&lt;a href=&#34;#fn:ref5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;, SWAT-CUP manual&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref6&#34;&gt;&lt;a href=&#34;#fn:ref6&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;等。&lt;/p&gt;

&lt;h1 id=&#34;2-qswat安装&#34;&gt;2 QSWAT安装&lt;/h1&gt;

&lt;p&gt;按照QSWAT官网的安装教程，按照如下顺序依次安装即可：&lt;/p&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-exclamation-triangle fa-2x&#34;&gt;&lt;/i&gt;目前QSWAT仅支持32位版本的QGIS-2.6.1，请不要安装最新版QGIS。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. QGIS-OSGeo4W-2.6.1-1-Setup-x86.exe
2. SwatEditorInstall.msi
3. QSWATinstall1.3.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成之后，打开QGIS，依次，即可在菜单栏看到QSWAT图标。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Plugins -&amp;gt; Manage and Install Plugins -&amp;gt; Installed -&amp;gt; QSWAT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;2-1-mpi配置&#34;&gt;2.1 MPI配置&lt;/h2&gt;

&lt;p&gt;QSWAT中利用&lt;a href=&#34;http://hydrology.usu.edu/taudem/taudem5/&#34; target=&#34;_blank&#34;&gt;TauDEM&lt;/a&gt;进行地形参数提取（填洼、流向、汇流、河网提取、流域划分等），TauDEM的运行需要&lt;a href=&#34;http://zhulj.net/c++/2016/03/18/Parallel-Env-of-Cpp.html&#34; title=&#34;Parallel-Env-of-Cpp&#34; target=&#34;_blank&#34;&gt;MPI并行环境&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;推荐安装微软的MPI实现： &lt;a href=&#34;https://www.microsoft.com/en-us/download/details.aspx?id=36045&#34; target=&#34;_blank&#34;&gt;Microsoft HPC 2012 MS-MPI&lt;/a&gt;，默认安装路径为&lt;code&gt;C:\Program Files\Microsoft HPC Pack 2012&lt;/code&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;QSWAT -&amp;gt; QSWAT Parameters&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;进行MPI路径设置，如图2。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F2-msmpi-path-config.jpg&#34; alt=&#34;fig2.MSMPI-Path&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图2. QSWAT中MPI路径设置&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;此时，如果运行QSWAT调用TauDEM，会出现下列错误提示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;------------------- TauDEM command: -------------------
C:/Program Files/Microsoft HPC Pack 2012/Bin\mpiexec.exe -n 8 C:\SWAT\SWATEditor\TauDEM5Bin\PitRemove -z G:\data_m\qswatTutorial\zts\Source\dem_zts_burned.tif -fel G:\data_m\qswatTutorial\zts\Source\dem_ztsfel.tif
Fatal protocol error: check version between Mpiexec.exe, Msmpi.dll, and Smpd.exe.
*** Problem with TauDEM PitRemove: please examine output above. ***
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问题原因&lt;/strong&gt;： QSWAT调用的是SWATEditor 2012安装时自动安装的TauDEM，而TauDEM的运行需要MPI并行环境支持，由于我们安装的版本是&lt;code&gt;MS HPC Pack 2012&lt;/code&gt;，与SWATEditor自带的&lt;code&gt;msmpi.dll&lt;/code&gt;不匹配，导致出错。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;解决办法&lt;/strong&gt;：将&lt;code&gt;C:\SWAT\SWATEditor\TauDEM5Bin\msmpi.dll&lt;/code&gt;删掉即可！&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;3-数据预处理&#34;&gt;3 数据预处理&lt;/h1&gt;

&lt;p&gt;SWAT建模最重要的也是最基础的便是数据预处理，作为一个综合的、长时段连续模拟、具有一定物理机理的半分布式流域过程模型，SWAT可以进行水文、侵蚀、污染物、植被生长等模拟，相应地，需要准备相关地形、土地利用、土壤理化属性、农田管理措施（如耕作模式）等数据，在此基础上，按照SWAT模型的要求进行格式整理，这便是&lt;strong&gt;SWAT建模数据预处理&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&#34;3-1-空间数据准备&#34;&gt;3.1 空间数据准备&lt;/h2&gt;

&lt;h3 id=&#34;3-1-1-dem&#34;&gt;3.1.1 DEM&lt;/h3&gt;

&lt;p&gt;数字高程模型（DEM）自然不必多说，万里长征第一步，就是准备好比流域范围稍大的适当分辨率DEM。&lt;/p&gt;

&lt;h3 id=&#34;3-1-2-土地利用&#34;&gt;3.1.2 土地利用&lt;/h3&gt;

&lt;p&gt;土地利用图，来源多种多样，可以遥感目视解译，也可地形图数字化，但是重要的一步是按照SWAT内置数据库对土地利用进行重新编码。SWAT内置数据库（&lt;code&gt;QSWATRef2012.mdb&lt;/code&gt;，可在安装目录找到，也可在新建工程目录下找到）中有3张表可作为&lt;code&gt;Landuse&lt;/code&gt;编码参考，分别是&lt;code&gt;CDL_lu&lt;/code&gt;、&lt;code&gt;nlcd_lu&lt;/code&gt;、&lt;code&gt;nlcd2001_lu&lt;/code&gt;。需要准备：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.栅格或矢量土地利用图（编码可随意，也可按照上述3张表中编码）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.土地利用查找表(.csv)，内容类似：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;Value,Landuse
1,AGRL
18,WATR
104,URLD
6,FRST
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-1-3-土壤&#34;&gt;3.1.3 土壤&lt;/h3&gt;

&lt;p&gt;与土地利用数据准备类似，土壤数据也需进行重编码和准备查找表。值得一提的是，SWAT内置了美国土壤数据库，并不符合中国土壤情况，因此，我们需要自建土壤数据库。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.从&lt;code&gt;QSWATRef2012&lt;/code&gt;中将&lt;code&gt;usersol&lt;/code&gt;表导出为&lt;code&gt;usersol.xlsx&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.编辑&lt;code&gt;usersol.xlsx&lt;/code&gt;：将研究区土壤类型（如&lt;code&gt;Heishatu&lt;/code&gt;、&lt;code&gt;Xiaofenshatu&lt;/code&gt;等）追加至表中；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.补充土壤类型对应的理化性质，参数可查地方土壤志，也可采样获得，不再赘述；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;4.将编辑好的&lt;code&gt;usersol.xlsx&lt;/code&gt;导入&lt;code&gt;QSWATRef2012.mdb&lt;/code&gt;中，并覆盖原表(如下图)，否则在&lt;code&gt;4.2 HRU划分&lt;/code&gt;中会出现找不到土壤类型定义的错误（如图3）。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F4.1-import-soil-database.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;具体操作步骤为，一定注意，&lt;strong&gt;不要主键！&lt;/strong&gt;&lt;i class=&#34;fa fa-exclamation-triangle fa-2x&#34;&gt;&lt;/i&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Access -&amp;gt; 外部数据 -&amp;gt; Excel -&amp;gt; 将数据导入当前数据库的新表中 -&amp;gt; 连着3个下一步 -&amp;gt; 不要主键 -&amp;gt; usersol -&amp;gt; 确定&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F4.0-soil-undefined.jpg&#34; alt=&#34;fig3-soil-undefined&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图3. 土壤类型未定义错误提示&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;5.土壤数据查找表(.csv)，内容类似：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;Value,Name
1,Heishatu
2,Xiaofenshatu
3,Huangshatu
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-1-5-坑塘-optional&#34;&gt;3.1.5 坑塘 (Optional)&lt;/h3&gt;

&lt;p&gt;坑塘或水库模拟可根据研究区实际情况取舍。坑塘数据的准备最好是在&lt;strong&gt;子流域划分&lt;/strong&gt;之后进行，因为坑塘在SWAT是集总式表达，并没有空间位置，而是每个子流域一套参数。放在这里因为同属通过数据预处理获得模型参数。&lt;/p&gt;

&lt;p&gt;要获取的坑塘物理参数主要有&lt;code&gt;PND_FR&lt;/code&gt;、&lt;code&gt;PND_PSA&lt;/code&gt;、&lt;code&gt;PND_PVOL&lt;/code&gt;、&lt;code&gt;PND_ESA&lt;/code&gt;、&lt;code&gt;PND_EVOL&lt;/code&gt;、&lt;code&gt;PND_VOL&lt;/code&gt;，通过GIS分析我们可以得到&lt;code&gt;PND_FR&lt;/code&gt;，进而其余面积、容积参数可求。&lt;/p&gt;

&lt;p&gt;下面主要介绍如何计算&lt;code&gt;PND_FR&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-code-fork fa-2x&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;所用python脚本托管在&lt;a href=&#34;https://github.com/crazyzlj/Python/blob/master/Util/pond_preprocess.py&#34; title=&#34;python-pond_preprocess-by-ZhuLJ&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;上。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PND_FR: Fraction of subbasin area that drains into ponds.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-exclamation-triangle fa-2x&#34;&gt;&lt;/i&gt;读者可以在&lt;code&gt;4.1 模型参数编辑&lt;/code&gt;之后回到这里进行坑塘数据提取！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.从土地利用中提取坑塘，并转换为与DEM分辨率、空间范围（Extent）均一致的栅格，如图4(a)；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.为避免影响后续upstream area的计算，从pond中剔除stream栅格，如图4(b)；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.调用TauDEM工具&lt;a href=&#34;http://hydrology.usu.edu/taudem/taudem5/help53/DInfinityUpslopeDependence.html&#34; title=&#34;DinfUpDependence&#34; target=&#34;_blank&#34;&gt;DinfUpDependence&lt;/a&gt;计算pond的upstream area，得到的栅格值域为[0,1]；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;4.设置阈值（如0.9），大于该阈值的栅格认为是能够汇入坑塘的；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;5.利用子流域范围划分上述栅格并计算面积，与子流域面积之比，即为&lt;code&gt;PND_FR&lt;/code&gt;，如图4&amp;copy;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F12-pond-fr-preprocess.jpg&#34; width=&#34;800&#34;&gt;
&lt;strong&gt;图4. 坑塘物理数据预处理&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-2-气象数据准备&#34;&gt;3.2 气象数据准备&lt;/h2&gt;

&lt;p&gt;降水是地表水过程的主要水来源，对模型构建起到至关重要的作用。&lt;/p&gt;

&lt;p&gt;气象数据的准备包括逐日降水、逐日最高/最低气温，当然如果资料丰富，也可准备逐日相对湿度、太阳辐射等数据；以及气象站点逐月数据（温度、相对湿度、太阳辐射等等）。&lt;/p&gt;

&lt;p&gt;具体数据格式，在相关参考文献中都有详解，这里不再赘述。&lt;/p&gt;

&lt;p&gt;我准备的数据包括：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pcpfork.txt 	降水站点信息（站名、经纬度、高程等）
pcp_LYQ.txt 	降水站降水数据（该文件名应在pcpfork.txt中有定义）
tempfork.txt	温度站点信息
temp_LYQ.txt	温度站温度数据
WGEN_LYQ.xlsx	气象站逐月数据（Excel中应包含WGEN_user数据表）
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-3-管理措施准备&#34;&gt;3.3 管理措施准备&lt;/h2&gt;

&lt;p&gt;管理措施数据直接影响对非点源污染的模拟。&lt;/p&gt;

&lt;p&gt;因此，需要结合研究区实际情况，进行管理措施数据的整理：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.从&lt;code&gt;QSWATRef2012.mdb&lt;/code&gt;中将&lt;code&gt;OpSchedules&lt;/code&gt;表导出为&lt;code&gt;OpSchedules.xlsx&lt;/code&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.编辑&lt;code&gt;OpSchedules.xlsx&lt;/code&gt;：新增一种管理模式，如南方水旱轮作&lt;code&gt;AGRL_zts&lt;/code&gt;,可以按照绝对日期设置耕地、施肥、播种、灌溉、收获，但是一般推荐使用积温进行设置，即&lt;code&gt;Heat unit scheduling&lt;/code&gt;, 值得注意的是：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-exclamation-triangle fa-2x&#34;&gt;&lt;/i&gt; 当HRU没有任何作物生长时，积温比例为全年的，而当播种操作完整之后，一直到作物收获，积温比例为该作物生长期内的积温与作物生长所需总积温之比！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3.编辑完成之后，导入&lt;code&gt;QSWATRef2012.mdb&lt;/code&gt;，并覆盖原表，待用。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-4-观测资料整理-径流-泥沙-污染物等&#34;&gt;3.4 观测资料整理（径流、泥沙、污染物等）&lt;/h2&gt;

&lt;p&gt;观测资料的整理需要做的就是与降水逐日对比，发现并剔除异常值：因为，降水和径流、泥沙的趋势是大致一致的。&lt;/p&gt;

&lt;h1 id=&#34;4-利用qswat建模&#34;&gt;4 利用QSWAT建模&lt;/h1&gt;

&lt;p&gt;准备好所有数据之后，便可以运行QSWAT建模了。点击新建工程，指定保存路径后，开始向导式建模（图5）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F3-new-project.jpg&#34; alt=&#34;fig5-new-project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图5. 新建QSWAT工程&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-1-子流域划分&#34;&gt;4.1 子流域划分&lt;/h2&gt;

&lt;p&gt;具体步骤如图6所示，不再文字赘述！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F4-delineation-watershed.jpg&#34; alt=&#34;watershed-delineation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图6. 子流域划分步骤&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-2-hrus划分&#34;&gt;4.2 HRUs划分&lt;/h2&gt;

&lt;p&gt;具体步骤如图7所示，不再文字赘述！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F5-create-hrus2.jpg&#34; alt=&#34;hru-delineation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图7. HRU划分步骤&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-3-模型参数编辑&#34;&gt;4.3 模型参数编辑&lt;/h2&gt;

&lt;p&gt;通过以上2个步骤，QSWAT为SWAT的运行准备好了基本的空间参数，接下来，对SWAT数据库进行编辑，交给SWATEditor啦（&lt;code&gt;Step 3 Edit Input and Run SWAT&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;点击Setp3之后，打开SWAT Editor软件界面，首先点击“Connect to Database”建立与Access数据库的连接.&lt;/p&gt;

&lt;h3 id=&#34;4-3-1-气象数据导入&#34;&gt;4.3.1 气象数据导入&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Write Input Tables -&amp;gt; Weather Stations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;按照&lt;code&gt;3.2 气象数据&lt;/code&gt;准备情况，依次设置&lt;code&gt;Weather Generator Data&lt;/code&gt;、&lt;code&gt;Rainfall Data&lt;/code&gt;、&lt;code&gt;Temperature Data&lt;/code&gt;，如图8。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F6-edit-database-climate.jpg&#34; alt=&#34;climate-database&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图8. 气象数据导入&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;随后:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write Input Tables -&amp;gt; Write SWAT Input Tables, Select All -&amp;gt; Create Tables&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这样便将之前所有的数据预处理操作写入了SWAT数据库，即&lt;code&gt;&amp;lt;project name&amp;gt;.mdb&lt;/code&gt;，如&lt;code&gt;zts.mdb&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;4-3-2-坑塘数据-optional&#34;&gt;4.3.2 坑塘数据(optional)&lt;/h3&gt;

&lt;p&gt;如果进行了&lt;code&gt;3.1.5 Pond (Optional)&lt;/code&gt;步骤，则在这里应该将坑塘数据更新：
两种方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.直接使用SWAT Editor逐个子流域进行编辑&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Edit SWAT Input -&amp;gt; Subbasin Data -&amp;gt; Pond (.pnd) -&amp;gt; Select subbasin ID -&amp;gt; OK -&amp;gt; Edit Values -&amp;gt; Save Edits -&amp;gt; Exit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;2.另一种方法与&lt;code&gt;3.1.3 Soil&lt;/code&gt;中的操作类似，即从&lt;code&gt;&amp;lt;project name&amp;gt;.mdb&lt;/code&gt;中导出&lt;code&gt;pnd&lt;/code&gt;表至&lt;code&gt;pnd.xlsx&lt;/code&gt;,编辑之后，重新导入数据库并覆盖原表。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-3-3-管理措施数据&#34;&gt;4.3.3 管理措施数据&lt;/h3&gt;

&lt;p&gt;管理措施数据由于需要对不同种类的HRU设置，数据库中生成对应HRU数量的记录，不便于自动操作，因此，采用手工设置的方法。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.打开管理措施设置界面&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Edit SWAT Input -&amp;gt; Subbasin Data -&amp;gt; Management (.mgt)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F6-edit-database-Management.jpg&#34; alt=&#34;edit-management&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图9. 打开管理数据边界界面&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.选取某一类HRU，比如这里我选择了所有土地利用为&lt;code&gt;AGRL&lt;/code&gt;的HRU，打开设置窗口之后，按照图9所示的步骤依次操作，即可完成该类HRU管理措施的配置。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F6-edit-database-Management4.jpg&#34; width=&#34;800&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图10. 设置管理数据&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-4-设置及运行模型&#34;&gt;4.4 设置及运行模型&lt;/h2&gt;

&lt;p&gt;到此为止，我们已经基本完成了模型构建的工作，下面开始首次运行模型。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.从SWAT数据库中读取并写入所有运行所需文件（即&lt;code&gt;TxtInOut&lt;/code&gt;文件夹）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Edit SWAT Input -&amp;gt; Re-Write SWAT Input Files&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如图11所示，这样，SWAT Editor便将SWAT运行所需的所有文件从&lt;code&gt;&amp;lt;project name&amp;gt;.mdb&lt;/code&gt;数据库导出至&lt;code&gt;&amp;lt;project path&amp;gt;\Scenarios\Default\TxtInOut&lt;/code&gt;中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F7-rewrite-swat-input-files.jpg&#34; alt=&#34;rewrite-swat-files&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图11. 写入SWAT运行所需所有文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-key fa-2x&#34;  aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; SWAT的运行的全部所需数据全在该文件夹下！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.运行模型&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;SWAT Simulation -&amp;gt; Run SWAT&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;图12所示为SWAT运行前设置界面，设置模拟起止日期、SWAT版本、输出选项（Daily）等之后，点击&lt;code&gt;Setup SWAT Run&lt;/code&gt; -&amp;gt; &lt;code&gt;Run SWAT&lt;/code&gt;之后，便可看到图13所示的运行窗口。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F8-prepare-and-run-swat.jpg&#34; alt=&#34;run-swat&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图12. 设置并运行SWAT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F9-wait-swat-running.jpg&#34; alt=&#34;swat-running&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图13. SWAT运行窗口&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-5-模型结果可视化&#34;&gt;4.5 模型结果可视化&lt;/h2&gt;

&lt;p&gt;模型运行结束之后，需要查看径流、泥沙等模拟与实测值的差异，以便分析原因，进行参数调整。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.将河道结果（.rch）写入输出数据库，便于读取、分析&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;SWAT Simulation -&amp;gt; Read SWAT Output&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;结果数据库文件为&lt;code&gt;&amp;lt;project path&amp;gt;\Scenarios\Default\TablesOut\SWATOutput.mdb&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2.在QSWAT界面打开&lt;code&gt;Setp 4 Visualise&lt;/code&gt;，参照图14进行设置，即可得到图15所示的流域出口实测与模拟径流结果。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过图14的流量过程线，最直观的分析结论为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;洪峰流量过大&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;基流过高&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而此时模型默认的参数下Nash系数为0.15，需要针对产流、地下水、蒸散发等过程参数进行调参，将另行文介绍。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F10-save-plot.jpg&#34; alt=&#34;save-plot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图14. SWAT输出可视化窗口设置&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2F11-flow-plot-Analysis.jpg&#34; width=&#34;800&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图15. 实测与径流模拟结果&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;5-常见错误&#34;&gt;5 常见错误&lt;/h1&gt;

&lt;h2 id=&#34;5-1-python相关&#34;&gt;5.1 Python相关&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python访问受限，解决方案：以管理员方式运行QGIS即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/QSWAT-manual%2Ferror-permission-denied.jpg&#34; alt=&#34;permission-denied&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图16. Python访问受限错误&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;6-总结&#34;&gt;6 总结&lt;/h1&gt;

&lt;p&gt;流域是多过程复杂交互的系统，流域模型是对其进行简化的物理、数学表达，对流域基础空间数据、管理数据等尽可能准确的认识，是得到较好模拟结果的前提和保证。&lt;/p&gt;

&lt;p&gt;本文从中国南方湿润区小流域的实际情况出发，比通常步骤多加了坑塘数据的设置，使得完全默认参数下的径流模拟已趋于合理。&lt;/p&gt;

&lt;p&gt;接下来，通过简单几个手工调参，便可达到较好结果，随后，利用&lt;a href=&#34;http://swat.tamu.edu/software/swat-cup/&#34; title=&#34;SWAT-CUP&#34; target=&#34;_blank&#34;&gt;SWAT-CUP&lt;/a&gt;进行自动调参，得到更优参数。&lt;/p&gt;

&lt;p&gt;相信很多SWAT建模者和我一样，都希望将SWAT-CUP自动率定结果重新写回SWAT数据库（.mdb），以便在可视化界面SWAT Editor中进一步修改调整，但是SWAT或SWAT-CUP官方并没有提供相应的工具，我用Python初步实现了这个功能，希望感兴趣的进行试用并提出宝贵建议，请移步&lt;a href=&#34;http://zhulj.net/swat/2016/03/27/update-swat-database-from-swatcup.html&#34; title=&#34;update-swat-database-from-swatcup&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ref1&#34;&gt;Winchell, M., Srinivasan, R., Diluzio, J., Arnold, J.G., 2013. ArcSWAT Interface for SWAT 2012, User&amp;rsquo;s Guide.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ref2&#34;&gt;Arnold, J.G., Kiniry, J.R., Srinivasan, R., Williams, J.R., Haney, E.B., Neitsch, S.L., 2013. SWAT 2012 Input/Output Documentation. Texas Water Resources Institute.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref2&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ref3&#34;&gt;Neitsch, S.L., Arnold, J.G., Kiniry, J.R., Williams, J.R., 2011. Soil and Water Assessment Tool Theoretical Documentation, Version 2009. Texas A&amp;amp;M University System, College Station, Texas, USA.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref3&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ref4&#34;&gt;Winchell, M.,Srinivasan, 2012. SWAT Editor for SWAT 2012 Documentation. Texas Water Resources Institute.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref4&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ref5&#34;&gt;Dile, Y.H., Srinivasan, R., George C., 2016. QGIS Interface for SWAT (QSWAT).
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref5&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ref6&#34;&gt;Abbaspour, K.C., 2015. SWAT-CUP: SWAT calibration and uncertainty programs - A User Manual. Eawag.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref6&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>批量下载中国地面气候资料日值数据集(V3.0)并建立SQLite数据库</title>
      <link>http://zhulj.net/zh/post/2016-04-11-constructing-surf_cli_chn_mul_day_v3.0-database/</link>
      <pubDate>Mon, 11 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://zhulj.net/zh/post/2016-04-11-constructing-surf_cli_chn_mul_day_v3.0-database/</guid>
      <description>

&lt;h1 id=&#34;0-更新说明&#34;&gt;0 更新说明&lt;/h1&gt;

&lt;h2 id=&#34;0-1-关于时制和日界的问题-2017-7-25&#34;&gt;0.1.关于时制和日界的问题（2017-7-25）&lt;/h2&gt;

&lt;p&gt;该数据集采用的是“北京时，日界20时”，也就是说记录为“2013-02-04”的数据应为“2013-02-04 20:00:00”，是“2013-02-03 20:00:01 ~ 2013-02-04 20:00:00 UTC+8” （当然，认为是“2013-02-03 20:00:00 ~ 2013-02-04 19:59:59 UTC+8”也可）这段时间的属性值，转换为UTC时间为“2013-02-04 12:00:00”。&lt;/p&gt;

&lt;p&gt;原始数据格式为“YYYY MM DD”，为了方便使用，数据库中统一将时间保存为“&lt;strong&gt;YYYY MM DD 20:00:00&lt;/strong&gt;”，即“&lt;strong&gt;北京时 UTC+8&lt;/strong&gt;”！&lt;/p&gt;

&lt;h2 id=&#34;0-2-关于数据更新频率&#34;&gt;0.2.关于数据更新频率&lt;/h2&gt;

&lt;p&gt;可根据官网的数据更新频率实时更新，一般来讲延迟半年，即2018年6月可获取最新至2017年12月31日的数据。&lt;/p&gt;

&lt;h1 id=&#34;1-需求分析&#34;&gt;1 需求分析&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;“&lt;a href=&#34;http://data.cma.cn/dataService/index/datacode/SURF_CLI_CHN_MUL_DAY_V3.0.html&#34; title=&#34;SURF_CLI_CHN_MUL_DAY_V3.0&#34; target=&#34;_blank&#34;&gt;中国地面气候资料日值数据集(V3.0)&lt;/a&gt;”包含了中国824个基准、基本气象站1951年1月以来本站气压、气温、降水量、蒸发量、相对湿度、风向风速、日照时数和0cm地温要素的日值数据。截至2017年12月31日的数据量为8.35 GB。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;降水、气温、风速、相对湿度等气象资料对流域建模是至关重要的数据，&lt;a href=&#34;http://data.cma.cn/&#34; target=&#34;_blank&#34;&gt;中国气象数据网&lt;/a&gt;为我们提供了良好的数据共享平台。其中，最常用的当属中国地面气候资料日值数据集(V3.0)，其站点分布如图1所示（实际下载下来是839个），目前数据已更新至2017年12月。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/climate%2Fchina-meteo-sites.jpg&#34; width=&#34;600&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图1. 中国839个基准、基本气象站分布图&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;但是，网站更新之后，数据只能按照时间检索，如图2所示，对只想下载某几个站点非常不便。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/climate%2Fsearch.jpg&#34; alt=&#34;search&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图2. 中国地面气候资料日值数据集(V3.0)数据检索界面&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;但是，这样下载下来是存有每月数据的链接，如图3所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/climate%2Fdown-links.jpg&#34; width=&#34;800&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图3. 下载链接&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;手动逐条下载显然不太现实，即便是逐条下载了，每个数据文件含有800多个站点某个月的某一类指标（降水、气温等）的数据，因此，如果想得到某个站点某时间段内所有气象指标数据，实属不易。&lt;/p&gt;

&lt;p&gt;因此，考虑：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.批量下载数据文件（txt）；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.读取数据并按站点存入数据库（SQLite）；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;3.按照站点及时间范围从数据库中提取数据。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-实现&#34;&gt;2 实现&lt;/h1&gt;

&lt;h2 id=&#34;2-1-批量下载&#34;&gt;2.1 批量下载&lt;/h2&gt;

&lt;p&gt;批量下载比较简单，调用&lt;code&gt;urllib2&lt;/code&gt;库即可，核心代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def downloadByUrl(curUrl, filePath):
    f = urllib2.urlopen(curUrl)
    data = f.read()
    with open(filePath, &amp;quot;wb&amp;quot;) as code:
        code.write(data)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-2-存入数据库&#34;&gt;2.2 存入数据库&lt;/h2&gt;

&lt;p&gt;包括气象站点数据结构及如何写入SQLite数据库代码设计。&lt;/p&gt;

&lt;h3 id=&#34;2-2-1-气象站点数据结构&#34;&gt;2.2.1 气象站点数据结构&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;原始记录中，每条记录均包含站点编号、经纬度、高程，造成数据冗余，因此设计一个站点父类&lt;code&gt;climateStation&lt;/code&gt;，保存这些信息：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class climateStation:
    &#39;&#39;&#39;
    base class of climate station
    :method: init(ID, lat, lon, alti)
    :method: printSation()
    &#39;&#39;&#39;
    def __init__(self, ID = &#39;&#39;, lat=9999, lon=9999, alti=9999):
        self.count     = 0
        self.StationID = ID    ## 5 digits
        self.lat       = lat   ## latitude, float degree
        self.lon       = lon   ## longitude, float degree
        self.alti      = alti  ## altitude, as ORIGIN: unit 0.1 meter
    def printStation(self):
        print(&#39;%s, %.3f, %.3f, %.1f&#39; % (self.StationID, self.lat, self.lon, self.alti)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;随后设计子类&lt;code&gt;climateFeatures&lt;/code&gt;，用于保存每个站点所有的气象数据，其中&lt;code&gt;initValues()&lt;/code&gt;方法用于添加一天记录时进行赋初值，&lt;code&gt;assignValuesByFtCode(idx, ftCode, ClimValues)&lt;/code&gt;方法根据索引&lt;code&gt;idx&lt;/code&gt;、气象数据类型&lt;code&gt;ftCode&lt;/code&gt;和数据值&lt;code&gt;ClimValues&lt;/code&gt;对当天数据进行修改，&lt;code&gt;check()&lt;/code&gt;方法用于检查该站点数据是否具有一致条数，&lt;code&gt;printFeature()&lt;/code&gt;方法用于打印该站点信息：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class climateFeatures(climateStation):
    &#39;&#39;&#39;
    sub-class of climate feature
    :method: init(ID, lat, lon, alti)
    :method: initValues()
    :method: assignValuesByFtCode(idx, ftCode, ClimValues)
    :method: check()
    :method: printFeature()
    &#39;&#39;&#39;
    def __init__(self, ID = &#39;&#39;, lat=9999, lon=9999, alti=9999):
        climateStation.__init__(self, ID, lat, lon, alti)
        self.count     = 0
        self.date      = []    ## date
        self.avgPRS    = []    ## average pressure of the day, ORIGIN: unit 0.1 hPa
        self.maxPRS    = []    ## maximum pressure of the day, ORIGIN: unit 0.1 hPa
        self.minPRS    = []    ## minimum pressure of the day, ORIGIN: unit 0.1 hPa
        self.avgTEM    = []    ## average temperature of the day, ORIGIN: unit 0.1 degree
        self.maxTEM    = []    ## maximum temperature of the day
        self.minTEM    = []    ## minimum temperature of the day
        self.avgRHU    = []    ## average relative humidity, unit 1%
        self.minRHU    = []    ## minimum relative humidity, nuit 1%
        self.PRE208    = []    ## precipitation from 20:00 to 8:00
        self.PRE820    = []    ## precipitation from 8:00 to 20:00
        self.PRE       = []    ## precipitation from 20:00 to 20:00, ORIGIN: unit 0.1 mm
        self.smEVP     = []    ## small evaporation, ORIGIN: unit 0.1 mm
        self.lgEVP     = []    ## large evaporation, ORIGIN: unit 0.1 mm
        self.avgWIN    = []    ## mean wind speed, ORIGIN: unit 0.1 m/s
        self.maxWIN    = []    ## maximum wind speed, ORIGIN: unit 0.1 m/s
        self.maxWINASP = []    ## aspect of maximum wind speed
        self.extWIN    = []    ## extreme wind speed
        self.extWINASP = []    ## aspect of extreme wind speed
        self.SSD       = []    ## sunshine duration hours, ORIGIN: 0.1 hour
        self.avgGST    = []    ## average ground surface temperature of the day, ORIGIN: 0.1 degree
        self.maxGST    = []    ## maximum ground surface temperature of the day, ORIGIN: 0.1 degree
        self.minGST    = []    ## minimum ground surface temperature of the day, ORIGIN: 0.1 degree
        
        
    def initValues(self):
        self.count += 1
        self.avgPRS.append(9999)
        self.maxPRS.append(9999)
        self.minPRS.append(9999)
        self.avgTEM.append(9999)
        self.maxTEM.append(9999)
        self.minTEM.append(9999)
        self.avgRHU.append(9999)
        self.minRHU.append(9999)
        self.PRE208.append(9999)
        self.PRE820.append(9999)
        self.PRE.append(9999)
        self.smEVP.append(9999)
        self.lgEVP.append(9999)
        self.avgWIN.append(9999)
        self.maxWIN.append(9999)
        self.maxWINASP.append(9999)
        self.extWIN.append(9999)
        self.extWINASP.append(9999)
        self.SSD.append(9999)
        self.avgGST.append(9999)
        self.maxGST.append(9999)
        self.minGST.append(9999)
        
    def assignValuesByFtCode(self, idx, ftCode, ClimValues):
        ## [&#39;PRS&#39;, &#39;TEM&#39;, &#39;RHU&#39;, &#39;PRE&#39;, &#39;EVP&#39;, &#39;WIN&#39;, &#39;SSD&#39;, &#39;GST&#39;]
        if ftCode == &#39;PRS&#39; and len(ClimValues) == 3:
            self.avgPRS[idx] = ClimValues[0]
            self.maxPRS[idx] = ClimValues[1]
            self.minPRS[idx] = ClimValues[2]
        elif ftCode == &#39;TEM&#39; and len(ClimValues) == 3:
            self.avgTEM[idx] = ClimValues[0]
            self.maxTEM[idx] = ClimValues[1]
            self.minTEM[idx] = ClimValues[2]
        elif ftCode == &#39;RHU&#39; and len(ClimValues) == 2:
            self.avgRHU[idx] = ClimValues[0]
            self.minRHU[idx] = ClimValues[1]
        elif ftCode == &#39;PRE&#39; and len(ClimValues) == 3:
            self.PRE208[idx] = ClimValues[0]
            self.PRE820[idx] = ClimValues[1]
            self.PRE[idx] = ClimValues[2]
        elif ftCode == &#39;EVP&#39; and len(ClimValues) == 2:
            self.smEVP[idx] = ClimValues[0]
            self.lgEVP[idx] = ClimValues[1]
        elif ftCode == &#39;WIN&#39; and len(ClimValues) == 5:
            self.avgWIN[idx] = ClimValues[0]
            self.maxWIN[idx] = ClimValues[1]
            self.maxWINASP[idx] = ClimValues[2]
            self.extWIN[idx] = ClimValues[3]
            self.extWINASP[idx] = ClimValues[4]
        elif ftCode == &#39;SSD&#39; and len(ClimValues) == 1:
            self.SSD[idx] = ClimValues[0]
        elif ftCode == &#39;GST&#39; and len(ClimValues) == 3:
            self.avgGST[idx] = ClimValues[0]
            self.maxGST[idx] = ClimValues[1]
            self.minGST[idx] = ClimValues[2]
        else:
            exit(1)
    def check(self):
        if self.count == len(self.date) \
                == len(self.avgPRS) == len(self.maxPRS) == len(self.minPRS) \
                == len(self.maxTEM) == len(self.minTEM) == len(self.avgTEM) \
                == len(self.avgRHU) == len(self.minRHU) \
                == len(self.PRE208) == len(self.PRE820) == len(self.PRE) \
                == len(self.smEVP) == len(self.lgEVP) \
                == len(self.avgWIN) == len(self.maxWIN) == len(self.maxWINASP) \
                == len(self.extWIN) == len(self.extWINASP) == len(self.SSD) \
                == len(self.avgGST) == len(self.maxGST) == len(self.minGST):
            return True
        else:
            return False
    def printFeature(self):
        print(&#39;%s, lat=%.3f, lon=%.3f, alti=%.1f, count=%d, date=%s, PRS=%s, TEM=%s,&#39;
              &#39; RHU=%s, PRE=%s, EVP=%s, WIN=%s, SSD=%s, GST=%s&#39; %
              (self.StationID, self.lat, self.lon, self.alti, self.count, self.date,
               self.avgPRS, self.avgTEM, self.avgRHU, self.PRE,
               self.lgEVP, self.avgWIN, self.SSD, self.avgGST))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-2-2-写入sqlite数据库&#34;&gt;2.2.2 写入SQLite数据库&lt;/h3&gt;

&lt;p&gt;逐个数据文件读取完之后，得到存有所有站点所有数据的数据字典，即：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;all_station_climate_data = {}  ##  format: StationID: climateFeatures()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设计函数&lt;code&gt;writeClimateDataToDatabase(allClimData, dbpath)&lt;/code&gt;将数据写入数据库：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def writeClimateDataToDatabase(allClimData, dbpath):
    &#39;&#39;&#39;
    write climate data to database
    :param allClimData: climate data of all stations&#39; directionary
    :param dbpath: path of Sqlite database
    &#39;&#39;&#39;
    print &amp;quot;Write climate data to database...&amp;quot;
    conn = sqlite3.connect(dbpath)
    count = 1
    for station in allClimData:
        print &amp;quot;---%d / %d, station ID: %s...&amp;quot; % (count, len(allClimData), allClimData[station].StationID)
        count += 1
        stationTabName = &#39;S&#39; + allClimData[station].StationID
        create_climdata_tab_sql = &#39;&#39;&#39;CREATE TABLE IF NOT EXISTS %s (
                        stID varchar(5) NOT NULL,
                        date datetime DEFAULT NULL,
                        avgPRS int DEFAULT 9999,
                        maxPRS int DEFAULT 9999,
                        minPRS int DEFAULT 9999,
                        avgTEM int DEFAULT 9999,
                        maxTEM int DEFAULT 9999,
                        minTEM int DEFAULT 9999,
                        avgRHU int DEFAULT 9999,
                        minRHU int DEFAULT 9999,
                        PRE208 int DEFAULT 9999,
                        PRE820 int DEFAULT 9999,
                        PRE int DEFAULT 9999,
                        smEVP int DEFAULT 9999,
                        lgEVP int DEFAULT 9999,
                        avgWIN int DEFAULT 9999,
                        maxWIN int DEFAULT 9999,
                        maxWINASP int DEFAULT 9999,
                        extWIN int DEFAULT 9999,
                        extWINASP int DEFAULT 9999,
                        SSD int DEFAULT 9999,
                        avgGST int DEFAULT 9999,
                        maxGST int DEFAULT 9999,
                        minGST int DEFAULT 9999
                        )&#39;&#39;&#39; % stationTabName
        #print create_climdata_tab_sql
        ### create current station climate data table
        createTable(create_climdata_tab_sql, conn)
        ### insert station information
        curClimateData = allClimData[station]
        fetchone_sql = &#39;SELECT * FROM %s WHERE stID = ? AND date = ?&#39; % stationTabName
        update_sql = &#39;&#39;&#39;UPDATE %s SET avgPRS = ?, maxPRS = ?, minPRS = ?, \
                        avgTEM = ?, maxTEM = ?, minTEM = ?, avgRHU = ?, minRHU = ?,\
                        PRE208 = ?, PRE820 = ?, PRE = ?, \
                        smEVP = ?, lgEVP = ?, avgWIN = ?, maxWIN = ?,\
                        maxWINASP = ?, extWIN = ?, extWINASP = ?, SSD = ?,\
                        avgGST = ?, maxGST = ?, minGST = ? WHERE stID = ? AND date = ?&#39;&#39;&#39; \
                     % stationTabName
        save_sql = &#39;&#39;&#39;INSERT INTO %s values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)&#39;&#39;&#39; % stationTabName
        for i in range(curClimateData.count):
            # If the current station record exists, then update it, else insert one.
            uniqueitem = [curClimateData.StationID, curClimateData.date[i]]
            dataRow = [curClimateData.StationID, curClimateData.date[i],
                       curClimateData.avgPRS[i], curClimateData.maxPRS[i], curClimateData.minPRS[i],
                       curClimateData.avgTEM[i], curClimateData.maxTEM[i], curClimateData.minTEM[i],
                       curClimateData.avgRHU[i], curClimateData.minRHU[i],
                       curClimateData.PRE208[i], curClimateData.PRE820[i],
                       curClimateData.PRE[i], curClimateData.smEVP[i], curClimateData.lgEVP[i],
                       curClimateData.avgWIN[i], curClimateData.maxWIN[i],
                       curClimateData.maxWINASP[i],
                       curClimateData.extWIN[i], curClimateData.extWINASP[i],
                       curClimateData.SSD[i],
                       curClimateData.avgGST[i], curClimateData.maxGST[i], curClimateData.minGST[i]]
            # print(dataRow)
            if fetchOneRecord(conn, fetchone_sql, uniqueitem):
                updateRecord(conn, update_sql, dataRow[2:] + uniqueitem)
                continue
            saveRecord(conn, save_sql, dataRow)
    conn.commit()
    conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-3-读取数据库&#34;&gt;2.3 读取数据库&lt;/h2&gt;

&lt;p&gt;读取数据库设计，包括查询条件输入格式及查询函数设计。&lt;/p&gt;

&lt;h3 id=&#34;2-3-1-输入查询条件&#34;&gt;2.3.1 输入查询条件&lt;/h3&gt;

&lt;p&gt;查询条件包括站号（为空则查询所有站点），起始时间和终止时间：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;## Input parameters
    SQLITE_DB_PATH = r&#39;...\SURF_CLI_CHN_MUL_DAY_V3.0.db&#39;
    QUERY_STATION_IDs = []       ## leave it blank to query all stations
    QUERY_DATE_FROM = [1951,1,1] ## format: Year, Month, Day
    QUERY_DATE_END  = [2015,12,31]
    SAVE_PATH = r&#39;...\results&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-2-查询函数设计&#34;&gt;2.3.2 查询函数设计&lt;/h3&gt;

&lt;p&gt;输出为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.站点经纬度、高程信息文件：&lt;code&gt;stationInfo.csv&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.按站点名命名的气象数据文件：e.g., &lt;code&gt;S50527.csv&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def QueryDatabase(dbpath, savePath, stationIDs, startTime, endTime):
    &#39;&#39;&#39;
    Query and save data from Sqlite database
    :param dbpath:
    :param savePath:
    :param stationIDs:
    :param startTime:
    :param endTime:
    :return:
    &#39;&#39;&#39;
    tableList = getTablesList(dbpath)
    conn = sqlite3.connect(dbpath)
    stationInfoCSVPath = savePath + os.sep + &#39;stationInfo.csv&#39;
    stationInfoData = []
    if stationIDs == []:
        stationIDs = getTablesList(dbpath)
    else:
        for i in range(len(stationIDs)):
            stationIDs[i] = &#39;S&#39; + stationIDs[i]
    for tabName in stationIDs:
        #tabName = &#39;S&#39; + stationID
        stationID = tabName[1:]
        if tabName in tableList:
            csvPath = savePath + os.sep + tabName + &#39;.csv&#39;
            startT = datetime.datetime(startTime[0], startTime[1], startTime[2])
            endT = datetime.datetime(endTime[0], endTime[1], endTime[2])
            startTStr = startT.strftime(&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;)[:10]
            endTStr = endT.strftime(&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;)[:10]
            fetch_data_sql = &#39;&#39;&#39;SELECT * FROM %s WHERE date BETWEEN &amp;quot;%s&amp;quot; AND &amp;quot;%s&amp;quot; ORDER BY date&#39;&#39;&#39; % (tabName, startTStr, endTStr)
            #print fetch_data_sql
            data = fetchData(conn,fetch_data_sql)
            saveToCSV(data, csvPath)
            fetch_station_sql = &#39;&#39;&#39;SELECT * FROM stationInfo WHERE stID=%s &#39;&#39;&#39; % (stationID)
            stationInfoData.append(fetchData(conn,fetch_station_sql))
    saveToCSV(stationInfoData, stationInfoCSVPath,&#39;stationInfo&#39;)
    conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-站点经纬度及高程信息&#34;&gt;3 站点经纬度及高程信息&lt;/h1&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-exclamation-triangle fa-2x&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; 当完成数据库构建之后，我查询了几个站点，发现经纬度和高程信息与之前看到的有细微差异！&lt;/p&gt;

&lt;p&gt;检查后发现，我的代码是以站点编号进行索引的，而默认了其经纬度、高程信息是正确且无误的。&lt;/p&gt;

&lt;p&gt;显然，事实并非如此，我又重新跑了一遍数据，找到并总结了每个站点的不同信息（经纬度和高程），比如下图这样，不知道气象共享网的数据库是怎么设计的，&lt;strong&gt;难道没有检查过站点的经纬度和高程信息吗&lt;/strong&gt;？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/climate%2Fstations_latlonalti.jpg&#34; alt=&#34;stations_lat_lon_alti&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;i class=&#34;fa fa-download fa-2x&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Excel表格可以点击&lt;a href=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/climate%2Fstations_all-%E6%89%80%E6%9C%89%E7%AB%99%E7%82%B9%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E7%BB%8F%E7%BA%AC%E5%BA%A6%E9%AB%98%E7%A8%8B.csv&#34; title=&#34;all_stations_latlonalti&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;下载。&lt;/p&gt;

&lt;h1 id=&#34;4-总结&#34;&gt;4 总结&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;就是为了简单实现这么个功能，代码没进行优化设计，8G多的数据读取并存入一个数据字典中，非常耗时。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最终得到的SQLite数据库文件大小为&lt;strong&gt;1.61&lt;/strong&gt; GB，SQLite打开如图4。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://zhulj-blog.oss-cn-beijing.aliyuncs.com/climate%2Fsqlite-jietu.jpg&#34; width=&#34;600&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图4. SURF_CLI_CHN_MUL_DAY_V3.0数据库截图&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;5-数据获取&#34;&gt;5 数据获取&lt;/h1&gt;

&lt;p&gt;自从本博客发表以来，已经累计帮助了几十位同学、老师、同行。如果对该数据集有兴趣，可邮件联系。&lt;/p&gt;

&lt;p&gt;另外，欢迎技术交流。&lt;/p&gt;

&lt;p&gt;Github: &lt;a href=&#34;https://github.com/crazyzlj/Python/blob/master/HydroDataDownload/CreateDatabase_SURF_CLI_CHN_MUL_DAY.py&#34; target=&#34;_blank&#34;&gt;创建数据库&lt;/a&gt;、&lt;a href=&#34;https://github.com/crazyzlj/Python/blob/master/HydroDataDownload/ReadDatabase_SURF_CLI_CHN_MUL_DAY.py&#34; target=&#34;_blank&#34;&gt;查询数据库&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Email: crazyzlj@gmail.com&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一种基于线结构光技术的细沟形态测量系统</title>
      <link>http://zhulj.net/zh/publication/2015-sdxb-laserscanner/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2015-sdxb-laserscanner/</guid>
      <description></description>
    </item>
    
    <item>
      <title>3种坡面流水深测量方法比较</title>
      <link>http://zhulj.net/zh/publication/2015-stbctb-olflowmeasurementcmp/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2015-stbctb-olflowmeasurementcmp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>地表微地形测量及定量化方法研究综述</title>
      <link>http://zhulj.net/zh/publication/2013-zgstbckx-reviewquantificationmicrotopography/</link>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2013-zgstbckx-reviewquantificationmicrotopography/</guid>
      <description></description>
    </item>
    
    <item>
      <title>坡面流超声波水深测量系统研究</title>
      <link>http://zhulj.net/zh/publication/2013-stbcxb-olflowultrasonicmeasurement/</link>
      <pubDate>Fri, 01 Feb 2013 00:00:00 +0800</pubDate>
      
      <guid>http://zhulj.net/zh/publication/2013-stbcxb-olflowultrasonicmeasurement/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
